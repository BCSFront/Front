import Arrow2 from "../components/Arrow2";
import BtnContinue from "../components/BtnContinue";
import Detail1Box from "../components/Detail1Box";
import GModal from "../components/GModal";
import RModal from "../components/RModal";
import data from "../data.json";
import "../style/detail.css";
import { useEffect, useState } from "react";
import { Link, useParams } from "react-router-dom";

const Detail = () => {
    const [showModal, setShowModal] = useState(false);

    const { id } = useParams();
    const [answer, setAnswer] = useState();

    // const onClickCheckA = ()  => {

    // }
    useEffect(() => {
        setShowModal(false);
    }, [id]);
    useEffect(() => {
        console.log(answer);
    }, [answer]);
    // useEffect(() => {
    //     console.log(id);
    // }, []);

    return (
        <div className="overflow-y-auto">
            <div className="min-h-screen">
                <div>
                    {" "}
                    <Link to="/topic">
                        <svg
                            className="mx-[26px] mt-[37px]"
                            width="362"
                            height="48"
                            viewBox="0 0 362 48"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                        >
                            <path
                                d="M15.6449 24L20.6616 18.995C20.8813 18.7753 21.0047 18.4773 21.0047 18.1667C21.0047 17.856 20.8813 17.558 20.6616 17.3383C20.4419 17.1186 20.1439 16.9952 19.8333 16.9952C19.5226 16.9952 19.2246 17.1186 19.0049 17.3383L13.9999 22.355L8.99493 17.3383C8.77524 17.1186 8.47728 16.9952 8.1666 16.9952C7.85591 16.9952 7.55795 17.1186 7.33826 17.3383C7.11857 17.558 6.99516 17.856 6.99516 18.1667C6.99516 18.4773 7.11857 18.7753 7.33826 18.995L12.3549 24L7.33826 29.005C7.22891 29.1135 7.14212 29.2425 7.08289 29.3847C7.02366 29.5268 6.99316 29.6793 6.99316 29.8333C6.99316 29.9873 7.02366 30.1398 7.08289 30.282C7.14212 30.4242 7.22891 30.5532 7.33826 30.6617C7.44672 30.771 7.57575 30.8578 7.71792 30.917C7.86009 30.9763 8.01258 31.0068 8.1666 31.0068C8.32061 31.0068 8.4731 30.9763 8.61527 30.917C8.75744 30.8578 8.88647 30.771 8.99493 30.6617L13.9999 25.645L19.0049 30.6617C19.1134 30.771 19.2424 30.8578 19.3846 30.917C19.5268 30.9763 19.6792 31.0068 19.8333 31.0068C19.9873 31.0068 20.1398 30.9763 20.2819 30.917C20.4241 30.8578 20.5531 30.771 20.6616 30.6617C20.7709 30.5532 20.8577 30.4242 20.917 30.282C20.9762 30.1398 21.0067 29.9873 21.0067 29.8333C21.0067 29.6793 20.9762 29.5268 20.917 29.3847C20.8577 29.2425 20.7709 29.1135 20.6616 29.005L15.6449 24Z"
                                fill="#212121"
                            />
                            <rect
                                x="51"
                                y="18"
                                width="216"
                                height="12"
                                rx="6"
                                fill="#EEEEEE"
                            />
                            <path
                                d="M328.683 31C328.257 31 327.943 30.9067 327.743 30.72C327.557 30.52 327.463 30.2333 327.463 29.86C327.463 29.6333 327.523 29.4133 327.643 29.2C327.763 28.9867 327.937 28.76 328.163 28.52L332.183 24.24C332.797 23.6 333.237 23.02 333.503 22.5C333.77 21.9667 333.903 21.4333 333.903 20.9C333.903 20.2333 333.69 19.7267 333.263 19.38C332.85 19.0333 332.243 18.86 331.443 18.86C330.99 18.86 330.537 18.9267 330.083 19.06C329.63 19.18 329.17 19.3933 328.703 19.7C328.463 19.86 328.237 19.9267 328.023 19.9C327.823 19.8733 327.643 19.7867 327.483 19.64C327.337 19.4933 327.237 19.3133 327.183 19.1C327.13 18.8867 327.137 18.6733 327.203 18.46C327.283 18.2333 327.443 18.04 327.683 17.88C328.257 17.4933 328.897 17.2 329.603 17C330.323 16.8 331.043 16.7 331.763 16.7C332.777 16.7 333.63 16.8533 334.323 17.16C335.017 17.4667 335.543 17.9133 335.903 18.5C336.263 19.0867 336.443 19.8 336.443 20.64C336.443 21.2 336.35 21.7467 336.163 22.28C335.99 22.8133 335.717 23.3533 335.343 23.9C334.983 24.4467 334.51 25.0267 333.923 25.64L330.163 29.56V28.88H336.043C336.403 28.88 336.677 28.9667 336.863 29.14C337.05 29.3133 337.143 29.5733 337.143 29.92C337.143 30.2667 337.05 30.5333 336.863 30.72C336.677 30.9067 336.403 31 336.043 31H328.683ZM344.016 31.2C342.349 31.2 341.076 30.5733 340.196 29.32C339.316 28.0533 338.876 26.2533 338.876 23.92C338.876 22.3467 339.069 21.0267 339.456 19.96C339.856 18.88 340.436 18.0667 341.196 17.52C341.969 16.9733 342.909 16.7 344.016 16.7C345.696 16.7 346.969 17.3133 347.836 18.54C348.716 19.7667 349.156 21.5533 349.156 23.9C349.156 25.46 348.956 26.7867 348.556 27.88C348.169 28.96 347.596 29.7867 346.836 30.36C346.076 30.92 345.136 31.2 344.016 31.2ZM344.016 29.1C344.922 29.1 345.589 28.68 346.016 27.84C346.456 27 346.676 25.6867 346.676 23.9C346.676 22.1133 346.456 20.82 346.016 20.02C345.589 19.2067 344.922 18.8 344.016 18.8C343.122 18.8 342.456 19.2067 342.016 20.02C341.576 20.82 341.356 22.1133 341.356 23.9C341.356 25.6867 341.576 27 342.016 27.84C342.456 28.68 343.122 29.1 344.016 29.1ZM356.008 31.2C354.341 31.2 353.068 30.5733 352.188 29.32C351.308 28.0533 350.868 26.2533 350.868 23.92C350.868 22.3467 351.061 21.0267 351.448 19.96C351.848 18.88 352.428 18.0667 353.188 17.52C353.961 16.9733 354.901 16.7 356.008 16.7C357.688 16.7 358.961 17.3133 359.828 18.54C360.708 19.7667 361.148 21.5533 361.148 23.9C361.148 25.46 360.948 26.7867 360.548 27.88C360.161 28.96 359.588 29.7867 358.828 30.36C358.068 30.92 357.128 31.2 356.008 31.2ZM356.008 29.1C356.914 29.1 357.581 28.68 358.008 27.84C358.448 27 358.668 25.6867 358.668 23.9C358.668 22.1133 358.448 20.82 358.008 20.02C357.581 19.2067 356.914 18.8 356.008 18.8C355.114 18.8 354.448 19.2067 354.008 20.02C353.568 20.82 353.348 22.1133 353.348 23.9C353.348 25.6867 353.568 27 354.008 27.84C354.448 28.68 355.114 29.1 356.008 29.1Z"
                                fill="#212121"
                            />
                            <rect
                                x="51"
                                y="18"
                                width="108"
                                height="12"
                                rx="6"
                                fill="#6949FF"
                            />
                            <path
                                fill-rule="evenodd"
                                clip-rule="evenodd"
                                d="M298.372 24.8961C297.299 21.5461 298.554 17.3811 302.071 16.2491C303.921 15.6521 306.204 16.1501 307.501 17.9391C308.724 16.0841 311.073 15.6561 312.921 16.2491C316.437 17.3811 317.699 21.5461 316.627 24.8961C314.957 30.2061 309.13 32.9721 307.501 32.9721C305.873 32.9721 300.098 30.2681 298.372 24.8961Z"
                                fill="#FF8181"
                                stroke="#212121"
                                stroke-width="1.5"
                                stroke-linecap="round"
                                stroke-linejoin="round"
                            />
                            <path
                                d="M311.238 20.0138C312.445 20.1378 313.2 21.0948 313.155 22.4358"
                                stroke="#212121"
                                stroke-width="1.5"
                                stroke-linecap="round"
                                stroke-linejoin="round"
                            />
                        </svg>

                        <Arrow2 num={200} />
                        {/* {" "}
                    d = data.image[ id - 1 ] */}
                    </Link>
                    {/* 텍스트 넣어주기 */}
                    <div className="mt-[37px] mx-[39px]">
                        <div className="text">
                            Please select two common elements found in the
                            headers of Ethereum and Bitcoin.
                        </div>

                        <div className="line mt-[33px] mb-[20px]"></div>
                    </div>
                </div>

                <div>{/* 여기는 300 상단 바  */}</div>

                <div className="  mt-[24px] mx-[39px] mb-[52px]">
                    <div>
                        {data.detail[id - 1].map((v, i) => (
                            <Detail1Box
                                key={i}
                                detail={v}
                                answer={answer}
                                setAnswer={setAnswer}
                            />
                        ))}
                    </div>
                </div>
                {/* <Link to="/detail"> */}
                {/* 보라색 버튼 ~! */}
                <div className=" checkABox ml-[21px] ">
                    <div
                        className="checkA"
                        onClick={() => setShowModal(!showModal)}
                        // onCLick={onClickCheckA}
                    >
                        {/* CHECK ANSWER */}

                        <BtnContinue title="CHECK ANSWER" />
                    </div>
                </div>
                {/* </Link> */}
                {showModal && <GModal title=" Correct!" title2="CONTINUE" />}

                {/* <RModal /> */}
            </div>
        </div>
    );
};
export default Detail;
